{"ast":null,"code":"var _jsxFileName = \"E:\\\\SoMuchPractice\\\\facerecognitionai\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport signIn from './components/signIn/signIn';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n/*\nconst app = new Clarifai.App({\n  apikey: 'c2ca6af3389843568c965d79e34c7133'\n}); */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'c2ca6af3389843568c965d79e34c7133'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.drawFaceBox = data => {\n      const boxEdges = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const imgWidth = Number(image.width);\n      const imgHeight = Number(image.height);\n      console.log(imgWidth, imgHeight);\n      return {\n        leftCol: boxEdges.left_col * imgWidth,\n        //top\n        topRow: boxEdges.top_row * imgHeight,\n        //right\n        rightCol: imgWidth - boxEdges.right_col * imgWidth,\n        //bottom\n        bottomRow: imgHeight - boxEdges.bottom_row * imgHeight //left\n\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.whenInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.whenSubmit = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.drawFaceBox(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imgUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: {\n          particles: {\n            number: {\n              value: 100,\n              desity: {\n                enable: true,\n                value_area: 50\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"signIn\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        whenInputChange: this.whenInputChange,\n        whenSubmit: this.whenSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        imgUrl: this.state.imgUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/SoMuchPractice/facerecognitionai/src/App.js"],"names":["React","Component","signIn","Clarifai","Particles","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","app","App","apiKey","constructor","drawFaceBox","data","boxEdges","outputs","regions","region_info","bounding_box","image","document","getElementById","imgWidth","Number","width","imgHeight","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","whenInputChange","event","input","target","value","whenSubmit","imgUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","render","particles","number","desity","enable","value_area"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport signIn from './components/signIn/signIn';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\n\n\n/*\nconst app = new Clarifai.App({\n  apikey: 'c2ca6af3389843568c965d79e34c7133'\n}); */\n\nconst app = new Clarifai.App({\n  apiKey: 'c2ca6af3389843568c965d79e34c7133'\n });  \n\n\nclass  App extends Component {\n  constructor() {\n    super(); \n    this.state = { input:'', imgUrl:'',  box: { }, }\n  }\n\n  drawFaceBox = (data) => {\n    const boxEdges = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const imgWidth = Number(image.width); \n    const imgHeight = Number(image.height); \n    console.log(imgWidth, imgHeight);\n    return {\n      leftCol : boxEdges.left_col * imgWidth, //top\n      topRow : boxEdges.top_row * imgHeight,  //right\n      rightCol : imgWidth - (boxEdges.right_col * imgWidth), //bottom\n      bottomRow : imgHeight - (boxEdges.bottom_row * imgHeight) //left\n    }\n  }\n   \n displayFaceBox = (box) => {\n   console.log(box); \n   this.setState({box: box});\n }\n\n\n\n  whenInputChange = (event) => {\n     this.setState({input: event.target.value}); \n  }\n  \n  whenSubmit = () => {\n    this.setState({imgUrl:this.state.input});\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.drawFaceBox(response)) )\n    .catch(err => console.log(err) ); \n  }\n \n  render (){\n  return (\n    <div className=\"App\">\n       <Particles className='particles' params={{particles: {number: {value:100, desity: {enable:true, value_area:50 }}}}} />     \n       <Navigation />\n       <signIn />\n       <Logo />\n       <Rank />\n       <ImageLinkForm whenInputChange={this.whenInputChange} whenSubmit={this.whenSubmit} />\n       <FaceRecognition box={this.state.box} imgUrl={this.state.imgUrl} />\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}